name: Unit tests

on:
  push:
    branches: [ master, 'releases/**' ]
  pull_request:
    branches: [ master, 'releases/**' ]
  schedule:
  - cron: "0 4 * * *"
    
jobs:
  tox:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        include:
          - os: macos-13
            python-version: '3.8'
          - os: ubuntu-latest
            python-version: '3.7'
          - os: windows-latest
            python-version: '3.8'
          - os: windows-latest
            python-version: '3.12'

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
    - name: Install dependencies (Common)
      run: |
        pip install -U pip
        pip install -U poetry tox-gh coverage
    - name: Run tests with tox
      run: |
        tox
        coverage xml
    - name: Upload to codecov.io
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
  py36:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
    - name: Install test dependencies
      run: |
        pip install -U pip
        pip install -U pytest pytest-cov jsonschema
    - name: Run tests
      run: |
        pytest --cov=archspec
    - name: Upload to codecov.io
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
